{"version":3,"sources":["../out/errors.js"],"names":["define","require","exports","Object","defineProperty","value","errors","serviceUrlCanntNull","serviceName","msg","Error","unexpectedNullResult","unexpectedNullValue","name","argumentNull","fieldNull","field","itemName","instanceMessangerStart"],"mappings":";;AAAAA,MAAM,CAAC,CAAC,SAAD,EAAY,SAAZ,CAAD,EAAyB,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACvD;;AACAC,EAAAA,MAAM,CAACC,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C;AAAEG,IAAAA,KAAK,EAAE;AAAT,GAA7C;AACAH,EAAAA,OAAO,CAACI,MAAR,GAAiB;AACbC,IAAAA,mBADa,+BACOC,WADP,EACoB;AAC7B,UAAIC,GAAG,sBAAeD,WAAf,6BAAP;AACA,aAAO,IAAIE,KAAJ,CAAUD,GAAV,CAAP;AACH,KAJY;AAKbE,IAAAA,oBALa,kCAKU;AACnB,UAAIF,GAAG,+BAAP;AACA,aAAO,IAAIC,KAAJ,CAAUD,GAAV,CAAP;AACH,KARY;AASbG,IAAAA,mBATa,+BASOC,IATP,EASa;AACtB,UAAIJ,GAAG,sBAAeI,IAAf,+BAAP;AACA,aAAO,IAAIH,KAAJ,CAAUD,GAAV,CAAP;AACH,KAZY;AAabK,IAAAA,YAba,wBAaAD,IAbA,EAaM;AACf,UAAIJ,GAAG,sBAAeI,IAAf,0BAAP;AACA,aAAO,IAAIH,KAAJ,CAAUD,GAAV,CAAP;AACH,KAhBY;AAiBbM,IAAAA,SAjBa,qBAiBHC,KAjBG,EAiBIC,QAjBJ,EAiBc;AACvB,UAAIR,GAAG,aAAMQ,QAAN,cAAkBD,KAAlB,4BAAP;AACA,aAAO,IAAIN,KAAJ,CAAUD,GAAV,CAAP;AACH,KApBY;AAqBbS,IAAAA,sBArBa,oCAqBY;AACrB,UAAIT,GAAG,iCAAP;AACA,aAAO,IAAIC,KAAJ,CAAUD,GAAV,CAAP;AACH;AAxBY,GAAjB;AA0BH,CA7BK,CAAN","sourcesContent":["define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.errors = {\r\n        serviceUrlCanntNull(serviceName) {\r\n            let msg = `Service '${serviceName}' base url can not null.`;\r\n            return new Error(msg);\r\n        },\r\n        unexpectedNullResult() {\r\n            let msg = `Null result is unexpected.`;\r\n            return new Error(msg);\r\n        },\r\n        unexpectedNullValue(name) {\r\n            let msg = `variable ${name} is unexpected null value.`;\r\n            return new Error(msg);\r\n        },\r\n        argumentNull(name) {\r\n            let msg = `Arugment ${name} cannt null or empty.`;\r\n            return new Error(msg);\r\n        },\r\n        fieldNull(field, itemName) {\r\n            let msg = `${itemName} ${field} cannt be null or empty`;\r\n            return new Error(msg);\r\n        },\r\n        instanceMessangerStart() {\r\n            let msg = `Instance messanger is start.`;\r\n            return new Error(msg);\r\n        }\r\n    };\r\n});\r\n"],"file":"errors.js"}